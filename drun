#!/usr/bin/env bash

DMENU=${DRUN_DMENU:-${DMENU:-dmenu}}
OPENER="$DRUN_OPENER"
FRECENCY_THRESHOLD="${DRUN_FRECENCY_THRESHOLD:-7776000}" # 90 days
FRECENCY_WEIGHT="${DRUN_FRECENCY_WEIGHT:-100}"

if [[ -z "$OPENER" ]]; then
    OPENERS=("dex" "gio launch" "gtk-launch" "kde-open" "xdg-open")
    for program in "${OPENERS[@]}"; do
        if command -v $(awk '{print $1}' <<< "$program") &> /dev/null; then
            OPENER="$program"
            break
        fi
    done
fi

FRECENCY_CACHE_FILE="${DRUN_FRECENCY_CACHE_FILE:-${XDG_CACHE_HOME:-$HOME/.cache}/drun-frecency.txt}"
ENTRIES_CACHE_FILE="${DRUN_ENTRIES_CACHE_FILE:-${XDG_CACHE_HOME:-$HOME/.cache}/drun-entries.txt}"
INDEX_CACHE_FILE="${DRUN_ENTRIES_CACHE_FILE:-${XDG_CACHE_HOME:-$HOME/.cache}/drun-index.txt}"

frecency() {
    local score=$1
    local last_time=$2
    local increment=$3
    local current_time=$(date +%s)
    local time_elapsed=$(( current_time - last_time ))

    if [[ $time_elapsed -gt $FRECENCY_THRESHOLD ]]; then
        time_elapsed=$FRECENCY_THRESHOLD
    fi
    
    local eq="$score * ($FRECENCY_THRESHOLD - $time_elapsed)/$FRECENCY_THRESHOLD + $increment * $FRECENCY_WEIGHT"
    local frecency=$(bc -l <<< "$eq")
    bc <<< "scale=0; ($frecency + 0.999999) / 1" # ceil
}

frecency_line_from_path() {
    local increment=${2:-0}
    local entry=$(grep "^[0-9]\+,$1" "$FRECENCY_CACHE_FILE")

    if [[ -n $entry ]]; then
        IFS=',' read -r frecency last_access <<< "$(echo "$entry" | awk -F',' '{print $1","$3}')"
        frecency=$(frecency "$frecency" "$last_access" "$increment")
        [[ $increment -ne 0 ]] && last_access=$(date +%s)
    else
        frecency=$(frecency 0 0 "$increment")
        last_access=0
    fi

    local displayname=$(entry_file_displayname "$1")
    echo "$frecency,$1,$last_access,$displayname"
}

update_access() {
    local line=$(frecency_line_from_path "$1" 1)
    sed -i "s|.*,$1,.*|$line|g" "$FRECENCY_CACHE_FILE"
}

list_desktop_files() {
    if $reindex || [[ ! -f "$INDEX_CACHE_FILE" ]]; then
        reindex=true
        fd . -j1 -e desktop /usr/share/applications /var/lib/flatpak/exports/share/applications ~/.local/share/applications ~/.local/share/flatpak/exports/share/applications -x bash -c 'grep -m1 -q "^NoDisplay=true$" {} || echo "{}"' > "$INDEX_CACHE_FILE"
    fi
    cat "$INDEX_CACHE_FILE"
}

gencache_desktop_files() {
    local entries=$(while IFS= read -r file; do
        frecency_line_from_path "$file" &
    done <<< "$(list_desktop_files)")
    (echo "$entries" | sort -t',' -k1nr -k4) > "$FRECENCY_CACHE_FILE"
}

entry_file_displayname() {
    (grep -m 1 -E '^Name=' "$1" | sed -E 's/^Name=(.*)/\1/'
    grep -m 1 -E '^GenericName=' "$1" | sed -E 's/^GenericName=(.*)/(\1)/') | paste -sd ' ' -
}

display_names_unordered() {
    if $reindex; then
        while IFS= read -r file; do
            entry_file_displayname "$file"
        done <<< "$(cut -d',' -f2 "$FRECENCY_CACHE_FILE")"
    else
        cut -d',' -f4 "$FRECENCY_CACHE_FILE"
    fi
}

gencache_entries() {
    gencache_desktop_files
    display_names_unordered | awk '!x[$0]++' > "$ENTRIES_CACHE_FILE"
}

list_displaynames() {
    if [[ ! -f "$ENTRIES_CACHE_FILE" ]]; then
        gencache_entries
    fi
    cat "$ENTRIES_CACHE_FILE"
}

if pgrep "$DMENU" > /dev/null; then
    killall "$DMENU"
    exit 1
fi

(reindex=true gencache_entries &) &>/dev/null
selected=$($DMENU ${@:--i -p "apps:"} <<< "$(list_displaynames)")
if [[ -z "$selected" ]]; then
    exit 0
fi

selected="$(grep -m 1 ",$selected$" "$FRECENCY_CACHE_FILE")"
if [[ -z "$selected" ]]; then
    exit 1
fi

selected=$(cut -d',' -f2 <<< "$selected")
(update_access $selected && wait && reindex=false gencache_entries &) &>/dev/null
($OPENER "$selected" & disown) &>/dev/null
exit 0
